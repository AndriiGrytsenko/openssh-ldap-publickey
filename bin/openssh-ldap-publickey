#!/usr/bin/perl

use Net::LDAP;
use POSIX qw(strftime);
use File::Basename;
use strict;

my $configuration_file = '/etc/ldap.conf';
my $version = '0.2.0';
my $prog_name = basename($0);

sub help {
    print "Usage: $prog_name <username>\n";
    print "Version: $version\n";
    print "\n";
    print "\t-h --help\tPrint this help message and exit\n";
    print "\t-v --version\tPrint the version number and exit\n";
    print "\n";
    print "Example:\n";
    print "\t". basename($0) ." username\n";
    print "If successful, it will write something like this to stdout:\n";
    print "\t".'ssh-rsa some_long_long_key user@hostname'."\n";
    exit;
}

sub version {
    my $version = shift;

    print "$version\n";
    exit;
}

sub parse_config {
    my ($config_file) = @_;

    my $conf;
    open(CONF, "<$config_file");

    while(<CONF>) {
	next if ( $_ =~ /^#/ or $_ =~ /^\s+$/ );
	my $line = lc($_);
	# remove leading whitespace
	$line =~ s/^\s+//;
	# remove trailing whitespace
	$line =~ s/\s+$//;
	my ($key,$val) = split(/\s+/, $line);
	$conf->{$key}=$val;
    }

    close(CONF);
    return($conf);
}

sub writeToLog {
  my ($logfile, $message) = @_;

  my $timestamp = strftime "%m/%d/%Y %H/%M/%S", localtime;
  open(LD, ">>$logfile");

  print LD "$timestamp: $message\n";

  close(LD);
}

help() if ( $ARGV[0] eq '-h' or $ARGV[0] eq '--help' or !defined($ARGV[0]) );
version($version) if ( $ARGV[0] eq '-v' or $ARGV[0] eq '--version' or !defined($ARGV[0]) );

my $conf = parse_config($configuration_file);
my $debug = $conf->{'openssh_ldap_debug'};
my $logfile = $conf->{'openssh_ldap_logfile'} || '/tmp/openssh-ldap-publickey.log';
my $timeout = $conf->{'timeout'} || 10;
my $nss_base_passwd = $conf->{'nss_base_passwd'} || "ou=People," .$conf->{'base'};


writeToLog($logfile, "Connecting to ldap server $conf->{'uri'} with timeout $timeout") if ($debug);
my $ldap = Net::LDAP->new(
         $conf->{'uri'},
         timeout => $timeout
) or die "$@";


my $mesg = $ldap->bind or die "$@";
my $user = $ARGV[0];


my $final_filter = "&(".$conf->{'pam_filter'}.")(uid=".$user.")";

writeToLog($logfile, "Searching key for user $user by filter $final_filter in base $nss_base_passwd") if ($debug);
$mesg = $ldap->search(
			base   => "$nss_base_passwd",
			filter => "$final_filter",
			attrs => ['sshPublicKey']
                    );

$mesg->code && die $mesg->error;


my $entry;
foreach $entry ($mesg->entries) {
    my $keys = $entry->{asn}->{attributes}->[0]->{vals};
    foreach my $key (@$keys){
        writeToLog($logfile, "Key found: $key") if ($debug);
        print "$key\n";
    }
}

writeToLog($logfile, "Disconnecting") if ($debug);
$mesg = $ldap->unbind;

